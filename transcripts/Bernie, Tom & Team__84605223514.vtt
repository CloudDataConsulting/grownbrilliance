WEBVTT

1
00:00:50.320 --> 00:00:55.070
Bernie Pruss: When I look in my email to see if they've said anything about moving.

2
00:01:24.800 --> 00:01:26.189
Thejesh Reddy: I only have any.

3
00:01:26.900 --> 00:01:27.830
Bernie Pruss: Hello, there!

4
00:01:28.100 --> 00:01:29.560
Bernie Pruss: Nice to meet you.

5
00:01:29.560 --> 00:01:30.389
Andy Veneri: Good morning!

6
00:01:31.170 --> 00:01:32.380
Thejesh Reddy: Good morning.

7
00:01:33.070 --> 00:01:35.178
Thejesh Reddy: actually, for us. It's good night.

8
00:01:35.530 --> 00:01:36.130
Andy Veneri: Wow! I'm.

9
00:01:36.130 --> 00:01:37.520
Thejesh Reddy: I think, yeah. So it's nice.

10
00:01:37.630 --> 00:01:38.800
Bernie Pruss: I gotcha.

11
00:01:40.550 --> 00:01:42.570
Andy Veneri: Weren't sure where you were all located.

12
00:01:47.060 --> 00:01:48.710
Bhargavi: Are you hybrid.

13
00:01:48.710 --> 00:01:49.520
Bernie Pruss: I,

14
00:01:50.230 --> 00:01:58.170
Bernie Pruss: we typically turn our cameras on. If that works for you guys, I don't know if if your culture, if you prefer not to have cameras, but.

15
00:01:58.170 --> 00:01:59.910
Thejesh Reddy: No, I mean we do.

16
00:01:59.910 --> 00:02:01.450
Bhargavi: No, we do, too.

17
00:02:01.450 --> 00:02:02.889
Thejesh Reddy: Let me see if I can.

18
00:02:02.890 --> 00:02:03.380
Bernie Pruss: Get mine.

19
00:02:03.380 --> 00:02:05.850
Thejesh Reddy: Since I saw you guys without video. So we can.

20
00:02:05.850 --> 00:02:06.620
Bernie Pruss: Half

21
00:02:07.340 --> 00:02:10.119
Bernie Pruss: by default. We leave it off just in case we don't want.

22
00:02:10.449 --> 00:02:15.669
Bernie Pruss: Somebody to be embarrassed if it if they didn't plan on being on camera. And suddenly they were.

23
00:02:16.290 --> 00:02:17.070
Thejesh Reddy: Camera.

24
00:02:17.390 --> 00:02:18.260
Bernie Pruss: Sorry.

25
00:02:20.660 --> 00:02:21.575
Thejesh Reddy: Sure

26
00:02:23.350 --> 00:02:26.540
Thejesh Reddy: just waiting for Tom to join. I think

27
00:02:26.600 --> 00:02:34.279
Thejesh Reddy: it's critical for him to join this call. Let me just quickly check him. I believe he is in a different call running late.

28
00:02:34.460 --> 00:02:36.350
Thejesh Reddy: but I'll just quickly check with her.

29
00:02:49.810 --> 00:02:56.095
Thejesh Reddy: Maybe we'll have a quick interest before Tom joins like I don't know if you know the background.

30
00:02:57.420 --> 00:02:58.420
Thejesh Reddy: well, yeah.

31
00:02:58.420 --> 00:03:02.999
Bernie Pruss: I could summarize really quickly. My understanding is that grown brilliance purchased

32
00:03:03.467 --> 00:03:10.149
Bernie Pruss: clean origin and added them to their portfolio. Or that's that's a nutshell that I know.

33
00:03:10.590 --> 00:03:21.032
Thejesh Reddy: Yes, so the our company name is Ajs creations under Ajs creations. We have all these brands like chrome billions. One diamonds like there are already 4 brands that we have so clean origin would be a 5th brand

34
00:03:21.370 --> 00:03:23.319
Thejesh Reddy: under our umbrella. So okay.

35
00:03:23.390 --> 00:03:45.380
Thejesh Reddy: so we have done an asset purchase like not a company purchase as such. It's an asset purchase that we have done so like, I mean, that's the context. And then obviously, we got your contact from Brand. So we thought, we'll connect with you on an and then understand like what you're doing for clean origin, like, I know you're managing 5 grand looker and all that. But then we just wanted to understand more on.

36
00:03:45.430 --> 00:03:48.160
Thejesh Reddy: like, what kind of work that you do

37
00:03:48.220 --> 00:03:52.019
Thejesh Reddy: on a daily basis like to support clean origin. Right? So that way, we know

38
00:03:52.480 --> 00:03:55.280
Thejesh Reddy: whether we need extended services or like.

39
00:03:55.820 --> 00:03:57.639
Thejesh Reddy: yeah, awesome. So there you go. I don't.

40
00:03:58.290 --> 00:03:59.190
Tom: Hi! Everybody!

41
00:03:59.750 --> 00:04:00.789
Tom: Oh, hello!

42
00:04:02.040 --> 00:04:03.939
Andy Veneri: Hello, Tom! Nice to meet you.

43
00:04:03.940 --> 00:04:05.579
Tom: Hi, nice to meet you guys, too.

44
00:04:06.980 --> 00:04:14.909
Tom: So yeah, so I think Cage just summed it up. We just want to know what you were doing to see if there's if we need your services moving forward.

45
00:04:14.910 --> 00:04:31.511
Bernie Pruss: Sure I'm happy to. And what I understood him to say is, you guys purchase the assets? But not technically the company. And I. I'm not a legal person, so I probably don't really know the implications of that. Or maybe we don't need to. But okay,

46
00:04:33.960 --> 00:04:56.787
Bernie Pruss: I I thought maybe we could do a quick round of introductions, at least for us and I. We had to put together a slide deck for one of our partners, and we kind of liked it. So I converted it over to use with you guys today. And I can show you really quickly a couple of slides about us and our capabilities. And then I have a list, an outline of what we did for clean origin, so that we could go through that

47
00:04:57.080 --> 00:04:58.370
Bernie Pruss: So

48
00:04:58.900 --> 00:05:00.000
Bernie Pruss: I did.

49
00:05:00.170 --> 00:05:22.449
Bernie Pruss: So I've been before I go to the slide deck. I'll just do my introduction really quick. My name is Bernie Proust. I've been building data warehouses for 25 years this year. I started as a subcontractor to Hewlett Packard consulting and before that I did a lot of database work. But that was my 1st data warehouse. I've worked for companies like citigroup

50
00:05:22.790 --> 00:05:24.120
Bernie Pruss: Stanley Works.

51
00:05:24.520 --> 00:05:25.990
Bernie Pruss: Charles Schwab.

52
00:05:26.545 --> 00:05:33.039
Bernie Pruss: Western Union and then a lot of little companies. You may never heard of startups and a variety of other companies.

53
00:05:34.610 --> 00:05:41.939
Bernie Pruss: What else to say about that? I found Snowflake about 5 years ago, and ever after having built data warehouses on about

54
00:05:42.290 --> 00:06:08.132
Bernie Pruss: 10 or 12 other different databases. I never want to do anything that's not on Snowflake again. For the most part. It's just I don't know how much you know about Snowflake, but we love it. And I think that's it about me. So we've been growing our company since. For about well, off and on for like 2020 years or so. But lately we've rolled about the last 5 years we've been adding people and clients and

55
00:06:09.020 --> 00:06:12.869
Bernie Pruss: growing so, Andy, do you want to go ahead and introduce? I'll pass to you.

56
00:06:14.971 --> 00:06:25.559
Andy Veneri: So my name is Andy Beneri. I've been an engineer for about 3 decades. I've been working in big data since databases

57
00:06:25.640 --> 00:06:30.020
Andy Veneri: started. I was an engineer with Mcafee. For

58
00:06:30.260 --> 00:06:36.700
Andy Veneri: a dozen or so years I worked with Bmc software. I worked with Trend, micro. So I had a lot of security

59
00:06:36.970 --> 00:06:39.170
Andy Veneri: software experience as well.

60
00:06:40.690 --> 00:06:47.479
Andy Veneri: some huge ble database projects and including some government projects.

61
00:06:48.090 --> 00:06:55.860
Andy Veneri: Joined Bernie in this venture about about 4 and a half or so years ago, and got on the Snowflake bandwagon

62
00:06:55.970 --> 00:07:00.180
Andy Veneri: like Bernie. I love Snowflake. It's wonderful.

63
00:07:00.240 --> 00:07:02.110
Andy Veneri: probably. Tell you a little bit more about it.

64
00:07:02.300 --> 00:07:03.990
Andy Veneri: and are

65
00:07:04.300 --> 00:07:10.960
Andy Veneri: our venture with clean origin. Started a few years back I was leading the project directly with the

66
00:07:11.200 --> 00:07:14.820
Andy Veneri: Controller and the Cfo. And the CIO.

67
00:07:15.330 --> 00:07:17.480
Andy Veneri: So we built everything.

68
00:07:17.480 --> 00:07:20.098
Bernie Pruss: CTO is the one that brought us on so just

69
00:07:20.580 --> 00:07:21.260
Andy Veneri: But it's bad, but.

70
00:07:21.260 --> 00:07:22.750
Bernie Pruss: 2 bit. Yep. Yep.

71
00:07:23.461 --> 00:07:31.809
Andy Veneri: So we built everything from scratch with them from the beginning. And we're responsible for building

72
00:07:32.010 --> 00:07:35.669
Andy Veneri: basically all the dashboards and reporting that they were using to

73
00:07:35.890 --> 00:07:36.760
Andy Veneri: manage the business.

74
00:07:36.760 --> 00:07:37.600
Javed: Listen.

75
00:07:37.600 --> 00:07:38.949
Andy Veneri: Stuff they use to

76
00:07:39.180 --> 00:07:40.779
Andy Veneri: sells to you guys.

77
00:07:40.970 --> 00:07:44.050
Andy Veneri: So anyway, I'll turn it back.

78
00:07:44.810 --> 00:07:47.170
Andy Veneri: Bernie, or go on with the Internet. That's fine.

79
00:07:47.170 --> 00:07:50.188
Bernie Pruss: I was. Would you guys like to introduce yourselves, Tom?

80
00:07:50.490 --> 00:07:51.360
Tom: Just like.

81
00:07:51.360 --> 00:07:52.440
Bernie Pruss: Kind of get a sense of who.

82
00:07:52.440 --> 00:08:03.289
Tom: I'm Tom Bergen. I am Tom Bergen. I'm the Vp. Of e-commerce for Ajs creations we own and operate several brands, including grown brilliance bond diamonds bespoke jewels.

83
00:08:03.730 --> 00:08:05.349
Tom: And now clean origin.

84
00:08:06.920 --> 00:08:08.590
Tom: yeah. So we are

85
00:08:08.710 --> 00:08:14.399
Tom: onboarding clean origin as quickly as we can. As we mentioned, it was an asset purchase.

86
00:08:14.580 --> 00:08:19.790
Tom: What that means is, we didn't buy the company or their liabilities or their contracts. We

87
00:08:19.820 --> 00:08:22.610
Tom: but sort of the assets, which is, you know.

88
00:08:22.840 --> 00:08:28.050
Tom: the brand, the trademarks, the website, the customer list, etc.

89
00:08:28.100 --> 00:08:36.669
Tom: gotcha. So you know a little bit of the ecosystem. So, moving forward, we are sort of picking up the the brand, and

90
00:08:36.890 --> 00:08:40.009
Tom: and running with it under our Ajs creations.

91
00:08:40.270 --> 00:08:41.179
Tom: umbrella.

92
00:08:42.010 --> 00:08:42.659
Bernie Pruss: Awesome.

93
00:08:43.750 --> 00:08:45.060
Tom: I'll turn it over to Tate.

94
00:08:45.360 --> 00:08:50.179
Thejesh Reddy: Yeah. Hi, everyone. I'm tej. I'm senior product manager. I closely work with

95
00:08:50.590 --> 00:08:54.989
Thejesh Reddy: all our ages, creations, business stakeholders to create product roadmap for all our clients.

96
00:08:55.460 --> 00:08:57.750
Thejesh Reddy: and then prioritize them. Execute them.

97
00:08:58.280 --> 00:09:00.210
Thejesh Reddy: That's all about me. And then, Bargawi.

98
00:09:01.070 --> 00:09:04.060
Thejesh Reddy: she's a product manager, too, and she works under me.

99
00:09:04.450 --> 00:09:06.739
Thejesh Reddy: for specifically for clean origin.

100
00:09:07.930 --> 00:09:11.549
Thejesh Reddy: And then we have Chris, who heads our analytics team.

101
00:09:12.270 --> 00:09:12.930
Bernie Pruss: Awesome.

102
00:09:13.410 --> 00:09:25.919
Thejesh Reddy: Yeah. And then we have all the tech team on the call. We kind of pull them in so that they understand what you're what you're doing with for like fight ran. And then looker and all that right in case if we need to take any action, there.

103
00:09:26.280 --> 00:09:27.190
Bernie Pruss: Absolutely

104
00:09:29.370 --> 00:09:37.039
Bernie Pruss: Is that good enough? Should I move on with the deck or did? Is there anybody else you want to introduce themselves individually. Okay. So

105
00:09:37.850 --> 00:09:40.649
Bernie Pruss: let me find the button to do

106
00:09:42.270 --> 00:09:44.969
Thejesh Reddy: Oh, I see that Ronnie is on the call. I

107
00:09:45.110 --> 00:09:49.530
Thejesh Reddy: I don't know, Benny. If you have met Ronnie already, I believe you right. Yeah.

108
00:09:49.530 --> 00:09:53.730
Bernie Pruss: Oh, Ronnie was with is with clean origin, and has been for a while right? Yes.

109
00:09:53.770 --> 00:09:57.929
Bernie Pruss: yep, yeah. I remember the name, and I don't know if we've ever been on a call together.

110
00:09:57.940 --> 00:10:01.880
Bernie Pruss: Your name was mentioned frequently, just as a subject matter expert, and

111
00:10:02.020 --> 00:10:05.760
Bernie Pruss: somebody, you know that we were getting requirements from

112
00:10:05.830 --> 00:10:08.670
Bernie Pruss: is how I remember it. Maybe Andy's worked with Ronnie.

113
00:10:10.610 --> 00:10:14.669
Andy Veneri: Don't know that we've ever been on a call together, maybe once with Addison.

114
00:10:14.910 --> 00:10:17.489
Ronny Wang: Yeah, probably put that as simple.

115
00:10:18.170 --> 00:10:19.010
Bernie Pruss: Okay.

116
00:10:19.290 --> 00:10:35.751
Bernie Pruss: trying to find the button for next. Okay, I'll go through these kind of quick. This was a marketing slide deck we put together because we were meeting with matillion as at a as a partner and introducing ourselves to them. So we kind of tried to highlight our stuff. We use clean origin as our

117
00:10:36.300 --> 00:10:39.640
Bernie Pruss: a reference. And as a case, study

118
00:10:40.810 --> 00:10:41.839
Bernie Pruss: the

119
00:10:42.478 --> 00:10:58.560
Bernie Pruss: the products we love are matillion. Dbt, 5, tran on snowflake. We are have recently started getting into master data management. In addition to data governance, we found a product called syncri. We like, we work with the data catalog company as a partner called data Edo.

120
00:10:58.956 --> 00:11:09.950
Bernie Pruss: my favorite bi tool is looker. And we've supported tableau. And this year we're doing a lot of power. Bi. We are looking at alternatives like Sigma and light dash.

121
00:11:11.440 --> 00:11:20.689
Bernie Pruss: Let's jump on. There's a subset of our team. We're actually we have like 3 more on the website. Besides these guys, the

122
00:11:20.790 --> 00:11:26.199
Bernie Pruss: we have obashine automotist, clean origin, alphabetical, I think, hopefully. So that

123
00:11:26.390 --> 00:11:31.029
Bernie Pruss: is why they're kind of last, we have case studies on our website that talk about more of what we did.

124
00:11:32.890 --> 00:11:54.599
Bernie Pruss: our tool and product mix. We our snowflake jump start is kind of our. Our thing that really gets us going is quickly on any new project. So it's it wasn't in terraform when we started with you guys, but it is now, or with clean origin. And so but we have this layout of a what we call our snowflake security framework, where we

125
00:11:54.924 --> 00:11:59.629
Bernie Pruss: we create most of the snowflake objects that we need for the next year or so.

126
00:11:59.690 --> 00:12:19.859
Bernie Pruss: like in the 1st couple of weeks of our projects. And we also have a matillion jump started for people that are using matillion and we use it. It's also in terraform, and it helps us set up the aws account, and then bring up the matillion instance in a very secure, you know we hope to be a very secure way, but using

127
00:12:20.240 --> 00:12:42.379
Bernie Pruss: you know, setting up all the networking stuff that we need from a Tillyon. The Dns settings all that stuff. We use dbt, and have been for like 4 years, and so we have an enhanced style guide. My mentor taught me a few things above and beyond the way Dbt recommends things. So we call that, you know, an enhanced style guide enhanced project structure.

128
00:12:43.240 --> 00:12:53.830
Bernie Pruss: this year we started doing Ci CD and Github actions, so that whenever we checked in or push code, it gets tested. We also trigger runs from matillion.

129
00:12:54.420 --> 00:12:56.170
Bernie Pruss: It can be triggered from

130
00:12:56.190 --> 00:13:04.750
Bernie Pruss: 5 tran, but 5 tran is one of those, so it's so easy to use. We don't even list it on this page. So let me move to the next page.

131
00:13:05.383 --> 00:13:20.409
Bernie Pruss: This is just supposed to represent that what we try to do when we're on a project is we? We try to make sure we have guidance from senior management, so that the their priorities are represented. And we, this is like a program office

132
00:13:20.410 --> 00:13:48.075
Bernie Pruss: swim lane. It's too small, probably, for you guys to read. But I'll just we think data governance. Not every company needs all of this or implements all of this. But we try to represent it in our thinking and talking. Different business areas need to provide input for the bi side of things. And then we get down into analytics, engineering data, engineering and what we call our snowflake admin, and it probably could include other Admins. We put this together for a client

133
00:13:48.510 --> 00:13:59.980
Bernie Pruss: year before last, and then kind of tweaked it a little bit to be able to use it for marketing, because we think that for the the Bi team to really do a good job, all of this stuff kind of needs to work

134
00:14:00.010 --> 00:14:03.020
Bernie Pruss: or to be efficient, I would say, and to

135
00:14:03.400 --> 00:14:07.959
Bernie Pruss: we work in a agile methodology, and we want to do the highest

136
00:14:08.410 --> 00:14:13.210
Bernie Pruss: priority to the business 1st and return results quickly on

137
00:14:13.727 --> 00:14:20.989
Bernie Pruss: their investment in what we do and so like, Andy mentioned, we worked with the Controller

138
00:14:21.050 --> 00:14:27.860
Bernie Pruss: and the Cfo. And they gave us most of our guidance on what they needed. When clean origin started.

139
00:14:29.530 --> 00:14:41.866
Bernie Pruss: He was doing, I think, an extra 20 or so hours a week trying to keep track of sales in a spreadsheet, and it was a ton of manual labor. So we replaced all of that with

140
00:14:43.130 --> 00:14:50.160
Bernie Pruss: this is just to represent that we we set up a flow pattern that we think is is

141
00:14:50.210 --> 00:14:57.850
Bernie Pruss: powerful, or you know, and maybe it's more people are doing it nowadays. But we learned to do this from the Dbt stuff where

142
00:14:58.181 --> 00:15:03.789
Bernie Pruss: we want all of the raw data ingestion to be in production. That's the main key point here.

143
00:15:04.280 --> 00:15:26.200
Bernie Pruss: Before we start developing our transformations with that data. So in the old days, we would develop our transformations with dev data which was not representative of broad data, and it cost us a ton of energy and time and friction. So now with this setup. We just, we only develop transformations with production data

144
00:15:26.250 --> 00:15:26.829
Bernie Pruss: which

145
00:15:27.550 --> 00:15:41.140
Bernie Pruss: this is just to kind of represent our snowflake security framework. We have a dev, a Uat or an integration. Sometimes we call it integration or and a prod layer, so that we can migrate from dev to test the prod.

146
00:15:41.515 --> 00:16:05.689
Bernie Pruss: We set up different databases for each of the things that we need in advance. We have a placeholder for an Ods operational data store and the Enterprise data warehouse is where most of the bi stuff ends up. We have a user sandbox and a developer sandbox, so that if somebody needs to learn snowflake or or the users need to have a a storage place.

147
00:16:06.142 --> 00:16:24.490
Bernie Pruss: That won't break production. They can log in, and we can give them access to the sandbox. They can then read the data from the data warehouse or raw data, or depending on what's needed for their bi and data science. But it's safe from messing with it can't interfere with production.

148
00:16:24.851 --> 00:16:42.260
Bernie Pruss: Then we create a database for every raw data source, like or tool. Right? So, matillion, we didn't put 5 Tran on this list because we were talking to matillion. So I need to go back and add it. Matillion and 5 Tran are competitors, and we were partners with both

149
00:16:42.340 --> 00:16:48.429
Bernie Pruss: since we were but 5. Tran also has a database in our raw environment.

150
00:16:48.902 --> 00:17:06.859
Bernie Pruss: We set up roles for security. Every database has an owner role, a read only role and a read write role. We set up warehouses in advance, so that you know you can keep track of what the costs are, whether it's Dev or broad Elt or Bi. Then snowflake bills

151
00:17:06.869 --> 00:17:15.009
Bernie Pruss: depend on by the warehouse, and by doing different workloads with different warehouses. We can then report on the costs by warehouse

152
00:17:15.507 --> 00:17:28.012
Bernie Pruss: clean origin has a relatively small Snowflake Bill. So we've never really needed to do that kind of analysis for for them, because I think it's about $1,000 a month at roughly. I'm not

153
00:17:28.369 --> 00:17:37.680
Bernie Pruss: sure exactly, but in that order of magnitude. And then we set up the service accounts and we have a set of service accounts that we set up

154
00:17:38.229 --> 00:17:56.050
Bernie Pruss: one for each of the raw databases, and that way. That service account for each of the raw areas. Matillion can only mess with the matillion database. 5 train can only mess with the 5 train database. A custom programmer can only do stuff in the custom database, etc,

155
00:17:56.700 --> 00:17:59.251
Bernie Pruss: And then we also

156
00:18:00.050 --> 00:18:09.570
Bernie Pruss: set up single sign on for some of our customers who are going to get into Snowflake on a regular basis. We didn't have anybody at clean origin that wanted that. So that hasn't been done there.

157
00:18:09.987 --> 00:18:16.159
Bernie Pruss: Okay, now I'm at the. Do you have any questions about that? And then I'll jump into the summary of what we did for clean origin.

158
00:18:17.100 --> 00:18:23.209
Andy Veneri: Bernie. I don't know if you're prepared to do it, but I think, judging from Tom's response earlier

159
00:18:23.521 --> 00:18:29.549
Andy Veneri: they might be pretty new to Snowflake. So do you have a bit, maybe just a quick overview of snowflake. Why, we use it.

160
00:18:29.550 --> 00:18:34.249
Bernie Pruss: Is, is that a a good idea, Tom? I just okay. Alright. So

161
00:18:34.767 --> 00:18:54.870
Bernie Pruss: let me think. If there's a slide I don't. I haven't had to sell Snowflake itself in a little bit. But what I can do is start with this slide and talk about it. So the I found Snowflake about 5 years ago, and after developing on all these other databases and having all the pains of these other databases. When I started to understand snowflake. I realized that.

162
00:18:55.050 --> 00:18:58.650
Bernie Pruss: So the big deal about Snowflake is that they

163
00:18:59.610 --> 00:19:21.449
Bernie Pruss: built their product. They started in around 2012 as a startup. They built their product from the ground up to be a cloud native application, and that is distinct from so many other products, where they just run their their on prem product in a Vm. In the cloud, in a virtual machine in the cloud, Snowflake built this whole thing

164
00:19:22.266 --> 00:19:36.670
Bernie Pruss: to run in the cloud, and so they like as a, for instance. So they completely separate the storage which are in databases and schemas from the compute clusters which are warehouses.

165
00:19:36.740 --> 00:19:52.757
Bernie Pruss: Almost every other product. They're kind of tied together, and if you want to increase your power or increase your storage, you have to increase both, which increases your costs and your maintenance, and overhead, and with Amazon redshift as an example.

166
00:19:53.730 --> 00:20:01.799
Bernie Pruss: When you want to increase your cluster size you can increase it, but you have limited output for a while, because it has to shift

167
00:20:02.336 --> 00:20:11.189
Bernie Pruss: all your data across the the new clusters and get them up to sync and that. And if you want to downsize it, it's really hard with Snowflake.

168
00:20:11.270 --> 00:20:27.729
Bernie Pruss: The warehouse can come on by itself. When I submit a query, and it will turn itself off after N number of minutes. Right? We that's configurable. But after a few minutes of nobody doing anything with it, it turns itself off, and you only pay for the time that it's on

169
00:20:27.810 --> 00:20:39.531
Bernie Pruss: the and you can have as many of those as you need. They can. You can also set up auto scaling at a per, and let me go through the sizing first.st So the warehouses come in

170
00:20:40.410 --> 00:20:44.710
Bernie Pruss: T-shirt sizes from extra small to 6 extra large.

171
00:20:44.740 --> 00:20:48.589
Bernie Pruss: and every step up doubles the power of the last step.

172
00:20:48.730 --> 00:21:07.580
Bernie Pruss: So we like clean origin. We probably don't go above a medium, or maybe most of the time I'd have to run a report to double check. But most of the time, with smaller data sets we can stay in the extra small range. The power of well, the. And then basically, I think the full list price

173
00:21:07.690 --> 00:21:12.140
Bernie Pruss: is around $2 and change for the in so so

174
00:21:12.160 --> 00:21:13.480
Bernie Pruss: clean origin.

175
00:21:14.060 --> 00:21:34.519
Bernie Pruss: Their snowflake account is at the lowest tier possible, which is missing some features that we recommend to our clients. But clean origin was really, you know, they're a startup. They, you know their value is in probably their margin. Right? So they they are gone with the very lowest size. Which did did the job?

176
00:21:34.933 --> 00:21:35.740
Bernie Pruss: But and

177
00:21:36.230 --> 00:21:43.307
Bernie Pruss: but what we can't do is auto scale at at the until you go up to one step to the next size. But auto scale means

178
00:21:43.990 --> 00:21:45.930
Bernie Pruss: Let me just go back a minute. So

179
00:21:47.200 --> 00:22:00.319
Bernie Pruss: 2 to $3. Retail for an hour of runtime on the extra small, and as you double in the T-shirt sizes your expense. The price per hour doubles. But

180
00:22:00.340 --> 00:22:01.580
Bernie Pruss: if you

181
00:22:02.389 --> 00:22:09.410
Bernie Pruss: don't go past the upper limit of the workload that you have, your workload will run twice as fast.

182
00:22:09.600 --> 00:22:36.369
Bernie Pruss: so it costs the same amount of money to be done. So some people I've heard tons of user stories in the last 5 years. But just imagine that you had a job that ran for 40 h on an extra small. If I run it on a small, it's going to run in for 20 h, and then on a medium. It'll run in 10 h and on a large. It'll run in 5 h, and so

183
00:22:36.440 --> 00:22:42.050
Bernie Pruss: be, even though the doubling the cost per hour doubled, the time was cut in half.

184
00:22:42.170 --> 00:22:49.699
Bernie Pruss: and so your cost of snowflake stayed the same. But your job got done in 8 times as fast.

185
00:22:49.830 --> 00:23:11.339
Bernie Pruss: And so that is something that what one of the things we love about it is is that depending on the client. It might be really small data which we use a really small warehouse, and then they don't pay ex. You know. They only pay for what they use same with storage. You only pay for what you use, and you don't have to manage storage in oracle and SQL. Server, and a lot of other databases

186
00:23:11.380 --> 00:23:34.549
Bernie Pruss: you run out of disk space and you have to manage I think they're called table spaces. If I can't remember correctly in Oracle, you have to manage that storage. You have to manage indexes. Snowflake is organized as a column or databases database, and there are no indexes. So there the maintenance for snowflake is super super low. We also have features like future based grants.

187
00:23:34.550 --> 00:23:52.139
Bernie Pruss: So when we create, we've set up our security framework so that the owner role on a database when it is what's used to create a table or a view, or whatever and whatever objects we need, and when it creates the object. The future based grants.

188
00:23:52.180 --> 00:24:17.020
Bernie Pruss: Grant select to the read only role and Grant read, select an update to the read, write role, and then the owner role has all privileges. So that way we never have to think about grants after we get the initial setup, or, let me say it a different way. We rarely have to think about grants. Sometimes when we're changing configuration, or if we, if the client has a whole bunch of users

189
00:24:17.230 --> 00:24:21.737
Bernie Pruss: that want to have access to Snowflake. We might have to set up the

190
00:24:23.170 --> 00:24:39.480
Bernie Pruss: a more granular role based access control for the class of user. So if you can imagine Hr users would see different things than maybe the sales team would see in Snowflake. So we would then have to do some initial configuration for that use case.

191
00:24:41.020 --> 00:24:43.220
Bernie Pruss: and it looks like Tom had to take a call. But

192
00:24:43.450 --> 00:24:46.433
Bernie Pruss: any questions from the tech team while

193
00:24:47.660 --> 00:24:48.210
Bernie Pruss: about.

194
00:24:48.210 --> 00:24:49.400
Bhargavi: Yeah, I,

195
00:24:49.870 --> 00:24:56.830
Bhargavi: I have a question. So the data partitioning, the clustering that you have, is it in relevance to the sizes.

196
00:24:57.670 --> 00:25:02.429
Bernie Pruss: When you say clustering, are you talking about the clusters meaning the warehouse, the compute size.

197
00:25:02.950 --> 00:25:06.389
Bernie Pruss: We're talking about how the storage is organized in the databases.

198
00:25:06.920 --> 00:25:14.809
Bhargavi: So, so this entire data is in the Snowflake schema. Right? So how many clusters do we have depending on the data size.

199
00:25:16.400 --> 00:25:39.600
Bernie Pruss: It's not related. So it's related to how fast you want the pro to process the data and how big of a data of a of a compute cluster you need. Oh, and that could be confusing a lot of people who already let me just clarify one thing when they say warehouse, that is, snowflakes term for a compute cluster. So I just wanna make sure that's clear, because otherwise that could be confusing.

200
00:25:39.895 --> 00:26:01.489
Bernie Pruss: But this is basically the compute cluster is a warehouse in in their terminology, so they're completely independent. And I just talked to a friend of mine the other day at Happy hour, and I was trying to explain it to him, and he's like, Well, how big is the cluster? And I'm like they're totally independent. And it's if you're used to thinking about that like like, it works in many, many

201
00:26:01.860 --> 00:26:13.329
Bernie Pruss: cloud based databases. It takes a little getting used to. They're completely unrelated, and you have full freedom to pick, as much compute as you need or want or can afford.

202
00:26:13.600 --> 00:26:16.364
Bernie Pruss: or that your use case demands right and

203
00:26:16.940 --> 00:26:17.520
Bernie Pruss: into.

204
00:26:17.520 --> 00:26:19.050
Bhargavi: So the size of the

205
00:26:19.210 --> 00:26:23.060
Bhargavi: so. The size of the warehouse is independent of the number of clusters.

206
00:26:24.610 --> 00:26:27.579
Bernie Pruss: When you say clusters. Are you talking about storage.

207
00:26:27.940 --> 00:26:28.620
Bhargavi: Yes.

208
00:26:29.000 --> 00:26:43.099
Bernie Pruss: Okay, yep, totally independent of the storage. The storage is like just a database full of storage and and a warehouse is a compute cluster. The other thing is that the way they engineered it is? I can have multiple compute clusters

209
00:26:43.230 --> 00:26:47.040
Bernie Pruss: talking to the same database, and they don't conflict with each other.

210
00:26:49.250 --> 00:26:49.950
Bhargavi: Okay.

211
00:26:50.150 --> 00:26:54.050
Bernie Pruss: And everybody just went off camera. So I don't know if we lost everybody.

212
00:26:55.720 --> 00:26:58.620
Thejesh Reddy: No, I think it's just Chris, I believe. Probably.

213
00:26:58.620 --> 00:27:11.127
Bernie Pruss: Now I'm gonna take a quick gander at my calendar. I don't have a hard stop. I have a meeting. I have a some, a webinar I could attend, but I don't need to, so I'm happy to keep going.

214
00:27:11.700 --> 00:27:13.529
Bernie Pruss: if you guys want to keep going.

215
00:27:15.545 --> 00:27:15.960
Thejesh Reddy: Yes!

216
00:27:15.960 --> 00:27:16.900
Chris B: 12!

217
00:27:16.900 --> 00:27:27.100
Thejesh Reddy: Yeah, we have a different meeting. But maybe we can extend for 5 min. If we can quickly run us through the different things that we do for clean origin. I think that would help us.

218
00:27:27.420 --> 00:27:34.070
Bernie Pruss: Okay? Sure, what we did is we set up the end to end to bi system implementation, snowflake setup. We initially, I think

219
00:27:34.410 --> 00:27:42.448
Bernie Pruss: major data source was magento, plus a few others with 5 tran. Whatever's in the 5 tran account today. Well, actually, that's expanded. And I

220
00:27:42.880 --> 00:27:52.859
Bernie Pruss: we don't. We no longer have access to 5 tran or snowflake but we set all that up initially, and we did the data transformations in Dbt

221
00:27:53.316 --> 00:28:08.180
Bernie Pruss: to the star schemas. We set up the looker and configured it on all the. We did all the dashboard work. We set up Ci CD. And automated testing with spectacles a while back, when they were really cutting costs. They turned. We turned off spectacles.

222
00:28:08.180 --> 00:28:27.799
Bernie Pruss: But if we were to do automated, if we were doing development in looker. We would want it. We would want that to be on. So it it really saves labor like crazy because it tests everything over time. We needed eventually to add matillion, which is down here and to do custom connectors and things that 5 Tran didn't handle.

223
00:28:27.800 --> 00:28:41.559
Bernie Pruss: And over time we ingested Google analytics gladly square kwi. There's a custom diamond feed, and we do a enhanced mapping of with Geocodio where we go and send

224
00:28:41.580 --> 00:28:47.309
Bernie Pruss: Andy, do you remember what gets sent. It was that all the addresses of the stores? And then it. We gave us back some mapping.

225
00:28:47.840 --> 00:28:52.999
Bernie Pruss: So one of the things that let me just keep talking, because we only have a second.

226
00:28:53.623 --> 00:28:54.869
Andy Veneri: Customer addresses.

227
00:28:55.510 --> 00:29:18.475
Bernie Pruss: Customer addresses. Okay, that's right. So what we, one of the things we did for them is we set up in the looker we mapped the location of their clients by, or the customers by, the spend amount so they could see what parts of the country were, was spending the most money, and that helped them decide where to open their

228
00:29:19.070 --> 00:29:27.330
Bernie Pruss: brick and mortar stores. So they initially started out online only, and then eventually, by looking at. Where was the money?

229
00:29:27.809 --> 00:29:32.419
Bernie Pruss: They could then make business decisions about where to open stores.

230
00:29:32.420 --> 00:29:33.109
Tom: Was that based on.

231
00:29:33.110 --> 00:29:33.440
Bernie Pruss: I think.

232
00:29:33.440 --> 00:29:36.720
Tom: And or was that based on sales, revenues.

233
00:29:38.300 --> 00:29:39.540
Andy Veneri: Yeah, I think it was.

234
00:29:39.660 --> 00:29:44.280
Andy Veneri: yeah, okay. And and it also helped them to target their marketing.

235
00:29:45.910 --> 00:29:47.690
Bernie Pruss: Target, their market. Yeah, exactly.

236
00:29:47.970 --> 00:29:48.580
Tom: Got it.

237
00:29:49.640 --> 00:29:54.799
Thejesh Reddy: And and what I understand is like Phytran and Medellane are the connectors that you have used

238
00:29:55.110 --> 00:29:58.460
Thejesh Reddy: to connect all the data sources to snowflake right? Like

239
00:29:58.700 --> 00:30:01.680
Thejesh Reddy: Yup, basically, these are the middlewares that I've used.

240
00:30:02.560 --> 00:30:08.249
Bernie Pruss: Yeah, 5. Tran only does ingestion. It copies data from the source into into snowflake.

241
00:30:08.360 --> 00:30:22.629
Bernie Pruss: Matillion can do do transformation as well. And because we like, and sometimes we I don't know. I'd have to ask Andy, what if he did any transformations there? But 5 trend cannot do well.

242
00:30:23.190 --> 00:30:40.009
Bernie Pruss: it's not safe to do custom connectors in 5 train. We've had a a bad experience about 4 years ago, 3 years ago, where we we were working with another consulting firm, and they tried to do a custom connector, and they outsourced it, and the guy did 3 attempts.

243
00:30:40.010 --> 00:30:54.660
Bernie Pruss: Then they gave it to us, and I think we got it done in the 1st or second attempt. But it was really expensive and hard to make custom connectors. And so, if we need a custom connector. We're only gonna we, we recommend matillion because it's too hard.

244
00:30:57.290 --> 00:31:00.560
Bernie Pruss: Okay, did that answer the question, is there any other question about that?

245
00:31:01.490 --> 00:31:05.449
Thejesh Reddy: No. I mean that question. That answer is clear.

246
00:31:06.380 --> 00:31:18.570
Tech Team: So in a nutshell. Funny, it basically gather all the data in a single platform and then give me good insights to business. And really the thing that is going to be

247
00:31:19.310 --> 00:31:22.509
Tech Team: helping the business right? That's what. Yeah.

248
00:31:22.839 --> 00:31:50.509
Bernie Pruss: If I can go back to this slide and just imagine, it's whatever list of of sources that clean origin uses, we load with 5 tran and matillion. Then we, and occasionally we, will transform with matillion. But we most of the transforms are in dbt, and so they read from the raw data, and they they transform it, and they put it into the star schema. That then Looker is looking at in order for the Bi reports to run on.

249
00:31:51.170 --> 00:31:51.910
Bernie Pruss: Does that help.

250
00:31:51.910 --> 00:31:52.470
Tech Team: God. Okay.

251
00:31:52.470 --> 00:31:53.140
Bernie Pruss: With a.

252
00:31:53.140 --> 00:32:09.289
Tech Team: Yeah, that. And one thing, Brian, like, when we have a database, we basically when we have production site, do you guys pull the data on the production side, or I have to make a red replica and then maybe give it to you. And you then pull the data from there is that how it works.

253
00:32:10.130 --> 00:32:18.980
Bernie Pruss: If you're talking about the sources, it varies by by source system. So we're working with a client now that

254
00:32:19.000 --> 00:32:22.479
Bernie Pruss: they would not let us connect directly to their erp.

255
00:32:22.898 --> 00:32:35.110
Bernie Pruss: The erp is called mi. 9. It's a retail system, you know. It's specialized in retail, and they would not let our client connect to their erp. So they had to do a read replica

256
00:32:35.589 --> 00:32:47.800
Bernie Pruss: into azure to copy that SQL. Server database over. And then we read from that SQL. Server database. But with, to my knowledge, with clean origins, data sources, we never had to do a read replica

257
00:32:48.360 --> 00:32:53.459
Bernie Pruss: or let me say that differently, Andy Andy. I don't know if you remember with

258
00:32:53.910 --> 00:32:57.360
Bernie Pruss: what's their name? Magento.

259
00:32:57.360 --> 00:33:01.629
Andy Veneri: I see we're reading from a replica, Bernie. And my sequel replica.

260
00:33:01.840 --> 00:33:02.800
Andy Veneri: Okay.

261
00:33:02.800 --> 00:33:05.260
Bernie Pruss: So with magento, the

262
00:33:05.270 --> 00:33:06.929
Bernie Pruss: the rep.

263
00:33:07.010 --> 00:33:11.999
Bernie Pruss: or the the vendor that is managing the

264
00:33:12.150 --> 00:33:14.370
Bernie Pruss: the magento database

265
00:33:16.520 --> 00:33:21.719
Bernie Pruss: provided a read replica to us, and that's all we ever needed to look at.

266
00:33:22.920 --> 00:33:24.630
Bernie Pruss: and it was transparent.

267
00:33:24.630 --> 00:33:25.310
Tech Team: Yes.

268
00:33:26.510 --> 00:33:26.850
Bernie Pruss: I mean.

269
00:33:26.850 --> 00:33:29.129
Tech Team: Sorry. Go ahead. Yeah, go ahead. Go ahead, Bernie.

270
00:33:29.450 --> 00:33:31.009
Bernie Pruss: Oh, I I was just

271
00:33:31.060 --> 00:33:34.260
Bernie Pruss: no go ahead. I I was just thinking ahead a little bit, but go ahead.

272
00:33:34.870 --> 00:33:44.929
Tech Team: No, no problem. So I was thinking, that does it do any feature prediction based on the sales or customer data that we have? Or does it do any feature prediction? Or

273
00:33:45.010 --> 00:33:48.429
Tech Team: to just analyze the data and give a broad view of.

274
00:33:48.430 --> 00:33:49.519
Bernie Pruss: I hate that.

275
00:33:49.860 --> 00:34:06.979
Bernie Pruss: my memory right? And I, Andy, I'm gonna let you answer that. I don't remember what all went into the bi side of things. The data is there that could probably be applied to that, and I don't think I don't remember it being requested, but that you can't trust my memory.

276
00:34:07.160 --> 00:34:10.780
Andy Veneri: If that was something they were doing internally, that that wasn't

277
00:34:10.790 --> 00:34:20.601
Andy Veneri: part of our implementation. But we certainly have the tools to do that and the knowledge to do that. If that's something that you guys are looking for,

278
00:34:22.300 --> 00:34:23.230
Andy Veneri: for certain.

279
00:34:24.030 --> 00:34:47.699
Bernie Pruss: One of the things we like about Looker is that it is pretty. It can be set up for self service, and we can send. I know some of the things that were done is they configured it to email reports to some of the users, and so they would get a report, maybe in a spreadsheet or I actually don't remember what that looks like, but I think they also had a link to be able to go back in, and then slice and dice in. Looker.

280
00:34:48.330 --> 00:34:59.310
Andy Veneri: Yeah, they would send out daily. And I think within the the finance team. I think they were getting like, you know, hourly updates on on revenue, on sales

281
00:34:59.440 --> 00:35:05.119
Andy Veneri: activity. But most of the dashboards that were set up in looker were were designed to be

282
00:35:05.602 --> 00:35:11.219
Andy Veneri: emailed so that the users didn't all have to, you know, log in to look or to view

283
00:35:11.420 --> 00:35:14.080
Andy Veneri: everything just showed up in their inbox.

284
00:35:14.270 --> 00:35:15.790
Andy Veneri: at least every morning.

285
00:35:24.480 --> 00:35:34.659
Tech Team: okay? And all those things like this, Google analytics and all those will be a real time data. There's no gap in between right branny.

286
00:35:35.960 --> 00:35:40.669
Bernie Pruss: I didn't quite understand the question about Google analytics. We. We loaded into the data.

287
00:35:40.670 --> 00:35:41.630
Tech Team: For the.

288
00:35:42.030 --> 00:35:44.439
Tech Team: So the data source that you are reading from

289
00:35:45.405 --> 00:35:50.829
Tech Team: is this a real time, or is it a hourly basis? Or maybe the scheduled basis is it like.

290
00:35:50.830 --> 00:35:51.300
Andy Veneri: New York.

291
00:35:51.300 --> 00:35:52.960
Tech Team: That's a model. Yeah.

292
00:35:53.180 --> 00:35:54.560
Andy Veneri: For Google, analytics.

293
00:35:55.670 --> 00:35:59.450
Tech Team: Yeah, for Google analytics, or for any sources. For that matter.

294
00:36:00.520 --> 00:36:01.120
Tech Team: I wish.

295
00:36:01.120 --> 00:36:18.729
Bernie Pruss: 5 train. I would just say that with 5 train, if it has a connector, you can configure it down to like every 5 min. It can do a refresh and keep it up to sync. We have to run dbt, though on a schedule to flow that data through

296
00:36:19.225 --> 00:36:21.600
Bernie Pruss: to the to the Bi tool.

297
00:36:21.880 --> 00:36:33.510
Bernie Pruss: but it's being replicated. And and I think we bought the least expensive 5 trend version, which might only go every 15 min, and I would look to Andy to see if he remembers.

298
00:36:33.510 --> 00:36:44.459
Andy Veneri: I think that's right. And but for we primarily have everything set up, I think it was on hourly intervals, which included the ingestion side and Ddt. Was running hourly.

299
00:36:44.660 --> 00:36:50.270
Andy Veneri: So Dbt runs through Dbt cloud, which is another component of the the architecture.

300
00:36:50.853 --> 00:36:56.360
Andy Veneri: That runs all of the transformation scripts other than what runs in matillion.

301
00:36:56.420 --> 00:37:00.560
Andy Veneri: And there's just a small subset of transformations that were running in matillion

302
00:37:00.840 --> 00:37:04.329
Andy Veneri: primarily for the that diamond feed. That was

303
00:37:05.570 --> 00:37:07.739
Andy Veneri: custom data. They were gathering.

304
00:37:10.140 --> 00:37:11.660
Bernie Pruss: Did that answer your question?

305
00:37:12.720 --> 00:37:13.629
Tech Team: Yeah. Hey, Ben.

306
00:37:13.950 --> 00:37:14.460
Bernie Pruss: Okay. Cool.

307
00:37:18.140 --> 00:37:20.350
Andy Veneri: There. There are other methods we could use and.

308
00:37:20.350 --> 00:37:30.469
Tech Team: Is there any limit on the data like because data will be keep growing every day, every month? Is there any limit of that? Or do we have to just auto scaling.

309
00:37:30.470 --> 00:37:32.697
Bernie Pruss: It just keeps

310
00:37:33.930 --> 00:37:48.599
Bernie Pruss: It will just keep growing, and there is no maintenance that you have to do. You might want to keep an eye on what you pay for it, but it's very inexpensive for storage compared to the price of the compute. So if you were to add like

311
00:37:48.830 --> 00:37:51.519
Bernie Pruss: billions and billions of rows in.

312
00:37:51.570 --> 00:38:06.650
Bernie Pruss: If you did it with 5 tran, 5 trend costs will go up, which is why we keep both 5 trend and matillion. What you might eventually have to do is go from an extra small warehouse to a small or a medium in order for it to process quickly, so

313
00:38:06.750 --> 00:38:10.190
Bernie Pruss: the larger the data set that's being processed every day.

314
00:38:10.290 --> 00:38:13.040
Bernie Pruss: the bigger the warehouse you need. Now.

315
00:38:13.150 --> 00:38:26.529
Bernie Pruss: that being said, there are features in Snowflake now that weren't there last year that they're now in production. There's a thing called a dynamic table, where, if we converted the work that we're doing in Dbt to dynamic tables.

316
00:38:26.790 --> 00:38:34.620
Bernie Pruss: It would. Snowflake would keep track of the changes that came in in all of these places, and it would ripple the changes through

317
00:38:34.650 --> 00:38:47.189
Bernie Pruss: with a very like change data capture like thing and incrementally update all the way through the system to the end. And that way we don't we would probably reduce. The snowflake costs quite a bit.

318
00:38:47.530 --> 00:38:58.290
Bernie Pruss: and if your snowflake costs are small already, it's not worth the engineering time. Maybe maybe it's a balancing act right? But there is really, I can't imagine

319
00:38:58.720 --> 00:39:03.560
Bernie Pruss: anyone hitting the upper limit on this. There are people with, you know.

320
00:39:03.670 --> 00:39:11.780
Bernie Pruss: with lots and lots of terabytes of data that keep using snowflake and it. And it never runs out of of space or compute.

321
00:39:13.430 --> 00:39:16.650
Tech Team: Got it, sure. No, thank you. Thank you for this details.

322
00:39:17.100 --> 00:39:22.699
Andy Veneri: I I think you had a big question about the the timing of the data like you said so for clean origin.

323
00:39:23.301 --> 00:39:26.190
Andy Veneri: They were satisfied to have those

324
00:39:26.250 --> 00:39:36.870
Andy Veneri: refreshes hourly on the data. We we do have other clients that do have data in real time where we have live sales data that goes right through to their dashboard.

325
00:39:36.920 --> 00:39:40.179
Andy Veneri: So that's you know, we have the option of building that through streaming.

326
00:39:41.630 --> 00:39:44.360
Tech Team: Sure. No problem. No, thank thank you, Andy, thank you.

327
00:39:47.280 --> 00:39:52.269
Bernie Pruss: So is that the extent of what you guys were looking for just a kind of an overview?

328
00:39:53.220 --> 00:39:57.560
Bernie Pruss: Or do you want to go away. Think about it, and see if you want to ask for anything else.

329
00:39:57.690 --> 00:40:01.119
Bernie Pruss: because we're happy to engage as much as you need.

330
00:40:03.530 --> 00:40:08.039
Thejesh Reddy: Yeah, I guess so. We'll also have to go to Looker and see all the reports that you guys have created. And.

331
00:40:08.040 --> 00:40:08.460
Tom: And.

332
00:40:08.460 --> 00:40:10.660
Thejesh Reddy: We'll have to evaluate

333
00:40:11.220 --> 00:40:18.620
Thejesh Reddy: if we really need all these tools going forward. So that's something that we'll probably go ahead and do someone else's internally.

334
00:40:19.130 --> 00:40:19.970
Bernie Pruss: Understood.

335
00:40:20.270 --> 00:40:25.560
Bernie Pruss: Alright. Well, guys have a great rest of your day, and I don't know. It's probably not a holiday weekend in India.

336
00:40:25.560 --> 00:40:25.930
Thejesh Reddy: Okay.

337
00:40:25.930 --> 00:40:27.119
Bernie Pruss: And right. But

338
00:40:27.600 --> 00:40:27.845
Bernie Pruss: yeah,

339
00:40:28.090 --> 00:40:30.020
Tech Team: So, Ronnie, you're in the United States right

340
00:40:31.023 --> 00:40:40.907
Tech Team: 1st time when I hear Snowflake I thought I was thinking of Snowball, which aws provide. But then I realized that it's not a snowball. It's a snowflake.

341
00:40:41.820 --> 00:40:47.339
Bernie Pruss: Well, and it's very confusing, because in dimensional modeling there is a a

342
00:40:47.660 --> 00:41:15.969
Bernie Pruss: a variation of dimensional modeling that's called a snowflake model or a snowflake off of the off of the dimension. And and so the word snowflake in data warehousing used to mean that a lot. And what I learned over time is that the company Snowflake? The founders, were skiing when they when they picked the name of the company, so they had probably snowflakes falling around them at the ski resort and picked that as the name.

343
00:41:17.030 --> 00:41:27.199
Tech Team: No, thank you. Thank you for this detail. I really appreciate Bonnie and Andy. I think, as they said, we'll probably review it internally, and then can get back to you with

344
00:41:27.780 --> 00:41:30.140
Tech Team: any question or any details that he's called.

345
00:41:30.650 --> 00:41:31.640
Bernie Pruss: Sounds good.

346
00:41:31.640 --> 00:41:32.690
Tom: Thank you. Guys, have a.

347
00:41:32.690 --> 00:41:35.429
Bernie Pruss: Have a good rest of your day. Thank you. Or night.

348
00:41:35.880 --> 00:41:36.290
Bernie Pruss: Yeah.

349
00:41:36.290 --> 00:41:37.350
Andy Veneri: Pleasure, being real.

350
00:41:37.350 --> 00:41:37.830
Bhargavi: Everyone.

351
00:41:37.830 --> 00:41:39.469
Bernie Pruss: It was great meeting you, bye, for now.
